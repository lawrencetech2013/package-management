
Nginx HTTP Server

Install Nginx in Redhat

dnf install https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm

sudo yum install nginx

#Enable the nginx service
sudo systemctl enable nginx

#Start the nginx service
sudo systemctl start nginx

#Check the nginx service status
sudo systemctl status nginx


Rename default nginx cont file
sudo mv /etc/nginx/nginx.conf /etc/nginx/nginx.conf.bkp

Create nginx cont file in default path and define proxy (reverse proxy) rules.
sudo vi /etc/nginx/nginx.conf Add the below lines


http://174.129.143.37/myapp/
#Our Custom Nginx Configuration
events {
worker_connections 1024;
}
I
http keepalive_timeout 5; upstream tomcatServers {
keepalive 50;
server
172.31.80.125:8080;
server
172.31.84.29:8080;
}
server 172.31.84.249:8080 down;
server {
listen 80;
location / {
}
}
proxy_set_header X-Real-LP $remote_addr; proxy_set_header X-Forwarded-For
$proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Proto $scheme;
proxy_set_header
Host $host;
proxy_pass http://tomcatServers;
}
}
}



Node for upgrade/patching:
server 172.31.16.79:8080;
server 172.31.28.14:8080;
server 172.31.84.245:8080 down;
 
Node should get more traffic:
server 172.31.16.79:8080 weight=4;
server 172.31.28.14:8080;
server 172.31.84.245:8080 down;

5 requests

Validate the nginx.conf by using below command
sudo nginx -t

Reload configurations
sudo nginx -s reload

Restart Nginx service to Reflect the proxy rules.
sudo systemctl restart nginx

Note: If you get 502 Bad Gateway

Security Ehanced Linux (SELinux) is a Linux kernel security module for Linux systems taht allows administrators to have more control over who can access the system. If SELinux enabled, which blocked NginX from making outbound connections.

If SELinux is on and you're experiencing this, you might try setting httpd_can_network_connect to true, and then restarting nginx:

#setsebool -p httpd_can_network_connect true

choosing a Load-Balancing Method


Round Robin - Requests are distributed evenly acros the servers, with server weights taken into consideration. This method is used by default

upstream backend {
# no load balancing method is specified for Round Robin server landmarktechtechnologies.app1.com;
server landmarktechtechnologies.app2.com;
}

Least Connections - A request is sent to the server with the least number of active connections, again with server weights taken into consideration:

upstream backend { least_conn;
server mithuntechnologies.app1.com; server
mithuntechnologies.app2.com;
}

IP Hash - The server to which a request is sent is determined from the client IP address. In this case either the first three octets of the IPv4 address or the IPv6 address are used to calculate the hash value.
